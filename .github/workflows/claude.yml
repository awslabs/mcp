name: Claude
on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["feat/claude-code-review"]
  workflow_dispatch:
permissions: {}
env:
  IS_THERE_AN_AWS_ROLE_ARN_TO_ASSUME: ${{ secrets.AWS_ROLE_ARN_TO_ASSUME != '' }}
jobs:
  claude:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      GH_TOKEN: ${{ github.token }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ github.token }}
      GITHUB_DYNAMIC_TOOLSETS: 1
      AWS_REGION: ${{ vars.AWS_REGION || 'us-west-2' }}
      CLAUDE_CODE_USE_BEDROCK: 1
      ANTHROPIC_MODEL: us.anthropic.claude-3-7-sonnet-20250219-v1:0
      DISABLE_PROMPT_CACHING: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Debug OIDC Claims
        uses: github/actions-oidc-debugger@9ccea9c81a54e227c2671097a854c51adf03e3a8 #v1
        with:
          audience: '${{ github.server_url }}/${{ github.repository_owner }}'
      - id: setup-aws-credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722
        if: ${{ env.IS_THERE_AN_AWS_ROLE_ARN_TO_ASSUME == 'true' && env.AWS_REGION }}
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 7200
          role-session-name: GitHubActions${{ github.run_id }}
          mask-aws-account-id: true
      - run: |
          cat <<EOT > package-lock.json
          {
            "name": "automated-code-review",
            "version": "0.0.0",
            "lockfileVersion": 3,
            "packages": {}
          }
          EOT
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "22.x"
          cache: npm
      - run: |
          npm install -g @anthropic-ai/claude-code --force --no-os-check
          echo "Claude Version"
          claude --version
          echo "Claude Setup"
          claude config set hasTrustDialogAccepted true
          claude config add allowedTools mcp__GitHub__
          claude config add allowedTools mcp__GitHub__list_pull_requests
          claude config add allowedTools mcp__GitHub__create_pull_request_review
          claude config add allowedTools mcp__GitHub__add_pull_request_review_comment
          claude config add allowedTools Bash
          claude mcp add-json --scope "project" "GitHub" '{"type":"stdio","command":"docker","args":["run","--rm","--interactive","--env","GITHUB_PERSONAL_ACCESS_TOKEN","--env","GITHUB_DYNAMIC_TOOLSETS","ghcr.io/github/github-mcp-server"],"env":{"GITHUB_PERSONAL_ACCESS_TOKEN":"${{ github.token }}"}}'
          echo "Claude Project MCP"
          cat .mcp.json
          echo "Claude Global Configuration"
          claude config list --global
          echo "Claude Local Configuration"
          claude config list
          echo "Claude MCP List"
          claude mcp list
          echo "Go Claude Go!"
          #### Adding --mcp-debug --debug --verbose are useful when troubleshooting BUT "tool_result" values are too long and create invalid JSON...
          cat <<EOT |
          Please use the GitHub MCP server to make the specific pull request review comment 'automated-code-review' for PR #239 in the checked out repository.
          EOT
            claude \
              --allowedTools "mcp__GitHub__,mcp__GitHub__add_pull_request_review_comment,mcp__GitHub__list_pull_requests,mcp__GitHub__create_pull_request_review,mcp__GitHub__get_pull_request_comments,mcp__GitHub__add_pull_request_review_comment,mcp__GitHub__create_pull_request_review,Bash" \
              --mcp-config .mcp.json \
              --print --output-format json | tee output.json
          cat output.json | jq '.'
