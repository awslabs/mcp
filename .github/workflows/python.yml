name: Python

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  detect-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.find-packages.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
      - name: Find Python packages
        id: find-packages
        working-directory: src
        run: |
          PACKAGES=$(find . -name pyproject.toml -exec dirname {} \; | sed 's/^\.\///' | jq -R -s -c 'split("\n")[:-1]')
          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT

  build:
    needs: [detect-packages]
    if: ${{ needs.detect-packages.outputs.packages != '[]' && needs.detect-packages.outputs.packages != '' }}
    strategy:
      matrix:
        package: ${{ fromJson(needs.detect-packages.outputs.packages) }}
    name: Build ${{ matrix.package }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      security-events: write
      actions: read
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "src/${{ matrix.package }}/.python-version"
          # cache: uv (not supported)

      - name: Install Bandit
        run: pip install bandit[toml]

      - name: Security check - Bandit
        id: bandit-check
        working-directory: src/${{ matrix.package }}
        run: bandit --recursive -ll --format html --output bandit-report-${{ matrix.package }}.html -r . -c "pyproject.toml" || echo "::set-output name=status::failure"

      - name: Store Bandit as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report-${{ matrix.package }}.html
          path: src/${{ matrix.package }}/bandit-report-${{ matrix.package }}.html

      - name: Stop on Bandit failure
        if: steps.bandit-check.outputs.status == 'failure'
        run: exit 1

      - name: Install dependencies
        working-directory: src/${{ matrix.package }}
        run: uv sync --frozen --all-extras --dev

      - name: Run tests
        working-directory: src/${{ matrix.package }}
        run: |
          if [ -d "tests" ]; then
            uv run --frozen pytest
          else
            echo "No tests directory found, skipping tests"
          fi

      - name: Run pyright
        working-directory: src/${{ matrix.package }}
        run: uv run --frozen pyright

      - name: Build package
        working-directory: src/${{ matrix.package }}
        run: uv build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.package }}
          path: src/${{ matrix.package }}/dist/
