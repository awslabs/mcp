# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Type definitions for AWS utility functions.
"""

from typing import Any, Dict, Protocol, runtime_checkable


# Define a Protocol for AWS clients that includes all the methods used in the codebase
@runtime_checkable
class AWSClientProtocol(Protocol):
    # Common AWS client methods
    def get_paginator(self, operation_name: str) -> Any: ...
    def get_waiter(self, waiter_name: str) -> Any: ...

    # STS client methods
    def get_caller_identity(self) -> Dict[str, Any]: ...
    def assume_role(self, RoleArn: str, RoleSessionName: str) -> Dict[str, Any]: ...

    # EC2 client methods
    def describe_vpcs(self, **kwargs) -> Dict[str, Any]: ...
    def describe_subnets(self, **kwargs) -> Dict[str, Any]: ...
    def describe_route_tables(self, **kwargs) -> Dict[str, Any]: ...
    def describe_network_interfaces(self, **kwargs) -> Dict[str, Any]: ...
    def describe_instances(self, **kwargs) -> Dict[str, Any]: ...

    # ECR client methods
    def describe_repositories(self, **kwargs) -> Dict[str, Any]: ...
    def create_repository(self, **kwargs) -> Dict[str, Any]: ...
    def get_authorization_token(self) -> Dict[str, Any]: ...
    def describe_images(self, **kwargs) -> Dict[str, Any]: ...
    def list_images(self, **kwargs) -> Dict[str, Any]: ...

    # CloudFormation client methods
    def describe_stacks(self, **kwargs) -> Dict[str, Any]: ...
    def list_stacks(self, **kwargs) -> Dict[str, Any]: ...
    def list_stack_resources(self, **kwargs) -> Dict[str, Any]: ...
    def describe_stack_events(self, **kwargs) -> Dict[str, Any]: ...
    def get_template(self, **kwargs) -> Dict[str, Any]: ...
    def delete_stack(self, **kwargs) -> Dict[str, Any]: ...
    def update_stack(self, **kwargs) -> Dict[str, Any]: ...
    def create_stack(self, **kwargs) -> Dict[str, Any]: ...

    # ECS client methods
    def describe_clusters(self, **kwargs) -> Dict[str, Any]: ...
    def list_clusters(self, **kwargs) -> Dict[str, Any]: ...
    def describe_services(self, **kwargs) -> Dict[str, Any]: ...
    def list_services(self, **kwargs) -> Dict[str, Any]: ...
    def describe_tasks(self, **kwargs) -> Dict[str, Any]: ...
    def list_tasks(self, **kwargs) -> Dict[str, Any]: ...
    def describe_task_definition(self, **kwargs) -> Dict[str, Any]: ...
    def list_task_definitions(self, **kwargs) -> Dict[str, Any]: ...
    def describe_container_instances(self, **kwargs) -> Dict[str, Any]: ...
    def list_container_instances(self, **kwargs) -> Dict[str, Any]: ...
    def describe_capacity_providers(self, **kwargs) -> Dict[str, Any]: ...

    # ELB client methods
    def describe_load_balancers(self, **kwargs) -> Dict[str, Any]: ...
    def describe_tags(self, **kwargs) -> Dict[str, Any]: ...

    # CloudWatch Logs client methods
    def describe_log_groups(self, **kwargs) -> Dict[str, Any]: ...
    def describe_log_streams(self, **kwargs) -> Dict[str, Any]: ...
    def get_log_events(self, **kwargs) -> Dict[str, Any]: ...

    # Add exceptions attribute
    @property
    def exceptions(self) -> Any: ...
